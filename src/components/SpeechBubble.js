import React, { useState, useEffect, useMemo } from 'react';
import './SpeechBubble.css';

// SVG from Union.svg, minified and URI-encoded for CSS mask-image
const TAIL_SVG_URI =
  "data:image/svg+xml,%3Csvg%20width%3D'36'%20height%3D'37'%20viewBox%3D'0%200%2036%2037'%20fill%3D'none'%20xmlns%3D'http%3A//www.w3.org/2000/svg'%3E%3Cpath%20d%3D'M25.5479%2021.9707C25.7623%2024.2404%2026.4179%2026.0145%2027.8857%2027.834C29.1899%2029.4505%2031.1426%2031.113%2034.0342%2033.1777L35.332%2034.0889L35.3525%2034.1064C35.3701%2034.12%2035.3877%2034.1336%2035.4033%2034.1494L35.4092%2034.1543C35.4234%2034.1692%2035.4351%2034.1859%2035.4473%2034.2021C35.4522%2034.2088%2035.4582%2034.2147%2035.4629%2034.2217C35.4729%2034.2365%2035.48%2034.2528%2035.4883%2034.2686C35.4987%2034.2883%2035.5079%2034.3086%2035.5156%2034.3301C35.523%2034.3503%2035.5295%2034.3706%2035.5342%2034.3916C35.535%2034.3953%2035.5373%2034.3986%2035.5381%2034.4023C35.5394%2034.4087%2035.538%2034.4155%2035.5391%2034.4219C35.5421%2034.4407%2035.5451%2034.4594%2035.5459%2034.4785C35.5465%2034.4926%2035.5465%2034.5066%2035.5459%2034.5205C35.545%2034.5425%2035.5419%2034.5641%2035.5381%2034.5859C35.5369%2034.5925%2035.5366%2034.599%2035.5352%2034.6055C35.5299%2034.6296%2035.5226%2034.6533%2035.5137%2034.6768C35.511%2034.6839%2035.5089%2034.6912%2035.5059%2034.6982C35.4984%2034.7155%2035.4881%2034.7314%2035.4785%2034.748C35.4722%2034.7591%2035.4671%2034.7708%2035.46%2034.7812L35.459%2034.7842C35.424%2034.8348%2035.3807%2034.876%2035.333%2034.9092C35.3215%2034.9172%2035.3091%2034.9236%2035.2969%2034.9307C35.2826%2034.9389%2035.2688%2034.9474%2035.2539%2034.9541C35.2407%2034.9601%2035.2267%2034.9639%2035.2129%2034.9688C35.1964%2034.9745%2035.1801%2034.9803%2035.1631%2034.9844C35.1571%2034.9858%2035.1516%2034.989%2035.1455%2034.9902H35.1445L35.1436%2034.9912C35.142%2034.9915%2035.1394%2034.9917%2035.1367%2034.9922C35.1313%2034.9933%2035.1233%2034.9951%2035.1133%2034.9971C35.093%2035.001%2035.0636%2035.0066%2035.0254%2035.0137C34.9485%2035.0278%2034.836%2035.0474%2034.6924%2035.0713C34.4054%2035.1191%2033.9926%2035.1827%2033.4854%2035.2461C32.4713%2035.3729%2031.0742%2035.5%2029.5479%2035.5C26.4893%2035.5%2023.4089%2034.9896%2020.3242%2033.4473C18.7947%2032.6825%2017.6443%2031.9163%2016.873%2031.3379C16.583%2031.1204%2016.348%2030.9271%2016.165%2030.7725C16.0532%2030.9008%2015.9105%2031.0439%2015.7256%2031.2002C15.0249%2031.7926%2013.6818%2032.634%2011.0811%2033.7334C8.45765%2034.8424%205.71192%2035.5326%203.62891%2035.9453C2.58582%2036.152%201.70476%2036.2897%201.08398%2036.376C0.773741%2036.4191%200.528089%2036.4492%200.359375%2036.4688C0.275014%2036.4785%200.209495%2036.4855%200.165039%2036.4902C0.142969%2036.4926%200.125886%2036.4949%200.114258%2036.4961C0.108513%2036.4967%200.103686%2036.4968%200.100586%2036.4971C0.0994138%2036.4972%200.0984184%2036.497%200.0976562%2036.4971L0.0966797%2036.498H0.0957031L0%2035.502C0.000486439%2035.5019%200.00179149%2035.5021%200.00292969%2035.502C0.00521453%2035.5017%200.00886227%2035.5015%200.0136719%2035.501C0.0237834%2035.5%200.0399405%2035.4983%200.0605469%2035.4961C0.101739%2035.4917%200.163431%2035.4849%200.244141%2035.4756C0.405902%2035.4568%200.644076%2035.4278%200.946289%2035.3857C1.55131%2035.3016%202.41316%2035.1663%203.43457%2034.9639C5.48039%2034.5585%208.15377%2033.8852%2010.6914%2032.8125C13.2519%2031.7301%2014.4904%2030.9351%2015.0801%2030.4365C15.3733%2030.1887%2015.4927%2030.0254%2015.5371%2029.9502C15.547%2029.9334%2015.5524%2029.9212%2015.5557%2029.9141V29.9131C15.5586%2029.8965%2015.5638%2029.8805%2015.5684%2029.8643C15.5726%2029.8491%2015.5764%2029.8339%2015.582%2029.8193C15.5871%2029.8063%2015.5934%2029.7939%2015.5996%2029.7812C15.6063%2029.7676%2015.6132%2029.7542%2015.6211%2029.7412C15.6294%2029.7275%2015.6386%2029.7142%2015.6484%2029.7012C15.6583%2029.688%2015.6686%2029.6752%2015.6797%2029.6631C15.6847%2029.6577%2015.6891%2029.6517%2015.6943%2029.6465C15.6996%2029.6412%2015.7055%2029.6368%2015.7109%2029.6318C15.7222%2029.6215%2015.7339%2029.6118%2015.7461%2029.6025C15.759%2029.5927%2015.7716%2029.5826%2015.7852%2029.5742C15.805%2029.5619%2015.8261%2029.5515%2015.8477%2029.542C15.8519%2029.5401%2015.856%2029.5379%2015.8604%2029.5361C15.8857%2029.5259%2015.9122%2029.5177%2015.9395%2029.5117C15.9444%2029.5106%2015.9492%2029.5088%2015.9541%2029.5078C15.9844%2029.5021%2016.0159%2029.5%2016.0479%2029.5C16.0805%2029.5%2016.1133%2029.5024%2016.1455%2029.5088C16.1966%2029.5189%2016.2439%2029.5391%2016.2881%2029.5635C16.3284%2029.5857%2016.3672%2029.6123%2016.4014%2029.6465L16.4131%2029.6582C16.4228%2029.6676%2016.4387%2029.6822%2016.46%2029.7021C16.5028%2029.7423%2016.5689%2029.8037%2016.6582%2029.8818C16.8368%2030.0381%2017.1085%2030.264%2017.4727%2030.5371C18.2014%2031.0837%2019.3012%2031.8176%2020.7715%2032.5527C23.6868%2034.0104%2026.6064%2034.5%2029.5479%2034.5C31.0212%2034.5%2032.3745%2034.3771%2033.3604%2034.2539C33.4978%2034.2367%2033.6277%2034.217%2033.75%2034.2002L33.458%2033.9951C30.5388%2031.9112%2028.4963%2030.1834%2027.1074%2028.4619C25.5012%2026.4709%2024.7791%2024.5018%2024.5498%2022.0469L24.5479%2022.0234V0H25.5479V21.9707ZM15.5518%2029.9395C15.5506%2029.9471%2015.5496%2029.9567%2015.5488%2029.9668C15.5485%2029.9717%2015.5481%2029.977%2015.5479%2029.9824V29.9951C15.5481%2029.9712%2015.5512%2029.9478%2015.5547%2029.9248C15.5538%2029.929%2015.5526%2029.9338%2015.5518%2029.9395Z";

const TypewriterText = ({ text, speed = 20, onComplete }) => {
  const [displayText, setDisplayText] = useState('');
  const [currentIndex, setCurrentIndex] = useState(0);

  useEffect(() => {
    if (currentIndex < text.length) {
      const timeout = setTimeout(() => {
        setDisplayText(prev => prev + text[currentIndex]);
        setCurrentIndex(prev => prev + 1);
      }, speed);

      return () => clearTimeout(timeout);
    } else if (onComplete) {
      onComplete();
    }
  }, [currentIndex, text, speed, onComplete]);

  // Reset display text when text prop changes
  useEffect(() => {
    setDisplayText('');
    setCurrentIndex(0);
  }, [text]);

  return <>{displayText}</>;
};

const SpeechBubble = ({
  children,
  className = '',
  style = {},
  position = 'left',
  typewriter = true,
  speed = 20,
  onTypingComplete
}) => {
  const bubbleStyle = useMemo(() => ({
    ...style,
    '--tail-svg': `url('${TAIL_SVG_URI}')`,
  }), [style]);

  const renderContent = () => {
    if (!typewriter) return children;
    
    if (typeof children === 'string') {
      return <TypewriterText text={children} speed={speed} onComplete={onTypingComplete} />;
    }
    
    if (Array.isArray(children)) {
      return children.map((child, index) => {
        if (typeof child === 'string') {
          return <TypewriterText key={index} text={child} speed={speed} onComplete={onTypingComplete} />;
        }
        return child;
      });
    }
    
    return children;
  };

  return (
    <div 
      className={`speech-bubble speech-bubble--${position} ${className} ${typewriter && 'speech-bubble--typing'}`} 
      style={bubbleStyle}
    >
      <div className="speech-bubble__content">
        {renderContent()}
      </div>
    </div>
  );
};

export default SpeechBubble;